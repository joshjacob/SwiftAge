name: CI
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
on: 
  push:
    branches: 
      - "main"
  pull_request:
    branches: 
      - "*"
  workflow_dispatch:
env:
  LOG_LEVEL: info

jobs:
  linux-unit:
    strategy:
      fail-fast: false
      matrix:
        container:
          - swift:5.6-focal
          - swift:5.7-jammy
          - swift:5.8-jammy
          - swiftlang/swift:nightly-5.9-jammy
          - swiftlang/swift:nightly-main-jammy
    container: ${{ matrix.container }}
    runs-on: ubuntu-latest
    steps:
      - name: Display OS and Swift versions
        shell: bash
        run: |
          if [[ '${{ contains(matrix.container, 'nightly') }}' == 'true' ]]; then
            SWIFT_PLATFORM="$(source /etc/os-release && echo "${ID}${VERSION_ID}")" SWIFT_VERSION="$(cat /.swift_tag)"
            printf 'SWIFT_PLATFORM=%s\nSWIFT_VERSION=%s\n' "${SWIFT_PLATFORM}" "${SWIFT_VERSION}" >>"${GITHUB_ENV}"
          fi
          printf 'OS:  %s\nTag: %s\nVersion:\n' "${SWIFT_PLATFORM}-${RUNNER_ARCH}" "${SWIFT_VERSION}" && swift --version
      - name: Check out package
        uses: actions/checkout@v3
      - name: Run unit tests with Thread Sanitizer
        run: swift test --filter=SwiftAgeTests.SwiftAgeParserTests --sanitize=thread

  macos-unit:
    strategy:
      fail-fast: false
      matrix:
        xcode-version:
          - '~14.3'
          - '~15.0'
    runs-on: macos-13
    steps:
      - name: Select latest available Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: ${{ matrix.xcode-version }}
      - name: Check out package
        uses: actions/checkout@v4
      - name: Run unit tests with Thread Sanitizer
        run: swift test --filter=SwiftAgeTests.SwiftAgeParserTests --sanitize=thread
  
  linux-integration:
    strategy:
      fail-fast: false
      matrix:
        age-image:
          - apache/age:PG13_latest
          - apache/age:PG12_latest
          - apache/age:PG11_latest
    container:
      image: swift:5.9-jammy
    runs-on: ubuntu-latest
    env:
      POSTGRES_DB: 'postgresDB'
      POSTGRES_USER: 'postgresUser'
      POSTGRES_PASSWORD: 'postgresPW'
      POSTGRES_HOSTNAME: 'age'
      POSTGRES_PORT: 5432
    services:
      age:
        image: ${{ matrix.age-image }}
        ports:
          - 5455:5432
        env:
          POSTGRES_USER: 'postgresUser'
          POSTGRES_DB: 'postgresDB'
          POSTGRES_PASSWORD: 'postgresPW'
          POSTGRES_PORT: 5432
    steps:
      - name: Display OS and Swift versions
        shell: bash
        run: |
          [[ -z "${SWIFT_PLATFORM}" ]] && SWIFT_PLATFORM="$(. /etc/os-release && echo "${ID}${VERSION_ID}")"
          [[ -z "${SWIFT_VERSION}" ]] && SWIFT_VERSION="$(cat /.swift_tag 2>/dev/null || true)"
          printf 'OS:  %s\nTag: %s\nVersion:\n' "${SWIFT_PLATFORM}-${RUNNER_ARCH}" "${SWIFT_VERSION}" && swift --version
      - name: Check out package
        uses: actions/checkout@v4
      - name: Run integration tests
        run: swift test --filter=SwiftAgeTests.SwiftAgeExtensionTests
      


